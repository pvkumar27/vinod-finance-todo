name: 📦 Semantic Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📋 Install dependencies
      run: npm ci

    - name: 🔍 Get current version
      id: current_version
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"

    - name: 📈 Calculate new version
      id: new_version
      run: |
        CURRENT_VERSION="${{ steps.current_version.outputs.current }}"
        IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        
        case "${{ github.event.inputs.release_type }}" in
          major)
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
            ;;
          minor)
            MINOR=$((MINOR + 1))
            PATCH=0
            ;;
          patch)
            PATCH=$((PATCH + 1))
            ;;
        esac
        
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "v_version=v$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"

    - name: 🏷️ Create manual release
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        npm run release ${{ steps.new_version.outputs.v_version }}

    - name: 🎉 Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.new_version.outputs.v_version }}
        release_name: Release ${{ steps.new_version.outputs.v_version }}
        body: |
          ## 🚀 Manual Release ${{ steps.new_version.outputs.v_version }}
          
          **Type**: ${{ github.event.inputs.release_type }} release
          **Previous**: ${{ steps.current_version.outputs.current }}
          
          ### Changes
          - Manual release triggered via GitHub Actions
          - Version bumped: ${{ steps.current_version.outputs.current }} → ${{ steps.new_version.outputs.v_version }}
          
          ### Deployment
          - ✅ Automatically deployed to production
          - 🔗 Live at: https://fintask.netlify.app
          
          ---
          *This release was manually triggered*
        draft: false
        prerelease: false
name: Test Local Environment

on:
  push:
    branches: [ 'feature/*', 'hotfix/*' ]
  pull_request:
    branches: [ main ]

jobs:
  test-local:
    name: Test Local Environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests
        run: npm test -- --watchAll=false
        env:
          REACT_APP_SUPABASE_URL: https://test.supabase.co
          REACT_APP_SUPABASE_ANON_KEY: test-key
          REACT_APP_SITE_URL: http://localhost:3000
      
      # Start the app in background
      - name: Build app
        run: npm run build
        env:
          REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
          REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
      
      - name: Start local server
        run: npx serve -s build &
        env:
          PORT: 3000
      
      # Cache Playwright browsers
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-
      
      # Install browsers only if cache miss
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium
      
      # Wait for server to start
      - name: Wait for server
        run: |
          timeout=30
          while ! curl -s http://localhost:3000 > /dev/null; do
            if [ $timeout -le 0 ]; then
              echo "Server failed to start"
              exit 1
            fi
            echo "Waiting for server to start... ($timeout seconds left)"
            sleep 1
            timeout=$((timeout - 1))
          done
      
      # Run login test against local server
      - name: Run login test against local server
        run: npx playwright test tests/e2e/auth/login.spec.js --project=chromium-desktop
        env:
          BASE_URL: http://localhost:3000
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-local
          path: tests/reports/
          retention-days: 30